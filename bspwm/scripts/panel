#! /bin/sh

# Load panel configuration
. ~/.config/bspwm/panel.cfg

if [ $(pgrep -cx panel) -gt 1 ] ; then
	printf "%s\n" "The panel is already running." >&2
	exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

bspc config top_padding $((BARHEIGHT + EDGEWIDTH))
bspc control --subscribe > "$PANEL_FIFO" &

# Get volume information
getVolume() {
	# Check if it's muted
	if [ "`pactl list sinks | awk '/\tMute:/{print $2}'`" = "yes" ]; then
		echo "[m]"
	else
		echo "`pactl list sinks | awk '/\tVolume: /{print $5}'`%"
	fi
}

# Get MPD information
getSong() {
	# Check if it's playing
	if [ -z "`mpc status | awk '/\[playing\]/{print $1}'`" ]; then
		echo "[stopped] "
	else
		echo "`ncmpcpp --now-playing '{{{%a - }{%t }{[%b]}}|{%f}}'`"
	fi
}

# Active window information
while true; do
	# Interval between checks in seconds
	WAIT=0.1
	# Create line
	TITLELINE="T"
	# Get Window ID
	WINID=`xprop -root 32x '\t$0' _NET_ACTIVE_WINDOW | awk '{print $2}'`
	# Get title
	TITLE=`xprop -id $WINID _NET_WM_ICON_NAME | perl -ne 'print /^.* = "(.*)"/'` \
	    && TITLELINE="${TITLELINE} ${TITLE}"

	# Dump information to file
	echo "$TITLELINE" > "$PANEL_FIFO"

	# Wait for 1 second before repeating
	sleep $WAIT
done &

# System information
while true; do
	# Interval between checks in seconds
	WAIT=0.5
	# Create line
	SYSLINE="S"
	# CPU information
	CPU=`awk '/cpu/{cpu_usage=($2+$4)*100/($2+$4+$5)} END {print int(cpu_usage)}' < /proc/stat` \
	    && SYSLINE="${SYSLINE} %{F$COLOR_FREE_FG}cpu%{F-} ${CPU}%%"
	# Memory information
	RAM=`free | awk 'FNR == 3 {print int($3/($3+$4)*100)}'` \
	    && SYSLINE="${SYSLINE} %{F$COLOR_FREE_FG}ram%{F-} ${RAM}%%"
	# Volume information
	VOL=`getVolume` \
	    && SYSLINE="${SYSLINE} %{A1:urxvtc -e alsamixer:}%{A2:amixer -q sset Master toggle:}%{A4:amixer -q sset Master 2%+:}%{A5:amixer -q sset Master 2%-:}%{F$COLOR_FREE_FG}vol%{F-} ${VOL}%{A}%{A}%{A}%{A}"
	# Clock and date
	CLK=`date +'%H:%M'` \
	    && SYSLINE="${SYSLINE} %{F$COLOR_FREE_FG}clk%{F-} $CLK "

	# Dump information to file
	echo "$SYSLINE" > "$PANEL_FIFO"

	# Wait for 1 second before repeating
	sleep $WAIT
done &

# Music Player Daemon information
while true; do
	# Interval between checks in seconds
	WAIT=1
	# Create line
	MPDLINE="M"
	# Add buttons to line
	MPD=`getSong` \
	    && MPDLINE="${MPDLINE} %{A1:urxvtc -e ncmpcpp:}%{A2:ncmpcpp toggle:}%{A4:ncmpcpp prev:}%{A5:ncmpcpp next:}%{F$COLOR_FREE_FG}mpd%{F-} $MPD%{A}%{A}%{A}%{A}"

	# Dump information to file
	echo "$MPDLINE" > "$PANEL_FIFO"

	# Wait for 1 second before repeating
	sleep $WAIT
done &

# Misc information
while true; do
	# Interval between checks in seconds
	WAIT=10
	# Create line
	MISCLINE="R"
	# Mail messages
	MSG=`curl -s -n "https://mail.google.com/mail/feed/atom" | perl -ne 'print $1 if /.*fullcount>([0-9]+)<\/fullcount.*/'` \
	    && MISCLINE="${MISCLINE} %{A:urxvtc -e mutt:}%{F$COLOR_FREE_FG}msg%{F-} $MSG%{A}"

	# Dump information to file
	echo "$MISCLINE" > "$PANEL_FIFO"

	# Wait for 1 second before repeating
	sleep $WAIT
done &

cat "$PANEL_FIFO" | ~/.config/bspwm/scripts/panel_bar | lemonbar \
    -g ${BARWIDTH}x${BARHEIGHT}+${EDGEWIDTH}+${EDGEWIDTH} -f "$PANEL_FONT_FAMILY" \
    -F "$COLOR_FOREGROUND" -B "$COLOR_BACKGROUND" -u "$UNDERLINE_WIDTH" | sh &

wait
# vim: set ts=8 sw=8 tw=0 noet :
